services:
  db-postgres:
    restart: always
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  core-app:
    restart: always
    build: .
    volumes:
      - .:/core
      - static_volume:/core/static
    env_file:
      - .env
    depends_on:
      - db-postgres
      - rabbitmq
    environment:
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: ${DB_HOST}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             gunicorn --bind 0.0.0.0:8000 core.wsgi:application --workers 3 --threads 2"

  rabbitmq:
    restart: always
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"

  celery-worker:
    restart: always
    build: .
    depends_on:
      - rabbitmq
      - db-postgres
    env_file:
      - .env
    environment:
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: ${DB_HOST}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
    command: >
      sh -c "celery -A core worker --loglevel=info"

  nginx:
    restart: always
    image: nginx:latest
    ports:
      - "80:80"
    depends_on:
      - core-app
    volumes:
      - static_volume:/core/static
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

volumes:
  postgres_data:
  static_volume:
